{
  "posts": [
    { "id": 1, "title": "json-server", "author": "typicode" },
    { "id": 2, "title": "json-server22", "author": "typicode22" }
  ],
  "comments": [{ "id": 1, "body": "some comment", "postId": 1 }],
  "profile": { "name": "typicode" },
  "repos": [
    {
      "id": 14747598,
      "name": "json-server",
      "full_name": "typicode/json-server",
      "description":
        "Get a full fake REST API with zero coding in less than 30 seconds (seriously)"
    },
    {
      "id": 3998883,
      "name": "homeshick",
      "full_name": "andsens/homeshick",
      "description": "git dotfiles synchronizer written in bash"
    },
    {
      "id": 8685986,
      "name": "nodenv",
      "full_name": "nodenv/nodenv",
      "description": "Manage multiple NodeJS versions."
    },
    {
      "id": 21737465,
      "name": "awesome",
      "full_name": "sindresorhus/awesome",
      "description": ":sunglasses: Curated list of awesome lists"
    },
    {
      "id": 2139017,
      "name": "rbenv",
      "full_name": "rbenv/rbenv",
      "description": "Groom your appâ€™s Ruby environment"
    },
    {
      "id": 80472665,
      "name": "best-resume-ever",
      "full_name": "salomonelli/best-resume-ever",
      "description":
        ":necktie: :briefcase: Build fast :rocket: and easy multiple beautiful resumes and create your best CV ever! Made with Vue and LESS."
    },
    {
      "id": 41796462,
      "name": "established-remote",
      "full_name": "yanirs/established-remote",
      "description": "A list of established remote companies"
    },
    {
      "id": 28699471,
      "name": "awesome-remote-job",
      "full_name": "lukasz-madon/awesome-remote-job",
      "description":
        "A curated list of awesome remote jobs and resources. Inspired by https://github.com/vinta/awesome-python"
    },
    {
      "id": 54346799,
      "name": "public-apis",
      "full_name": "toddmotto/public-apis",
      "description":
        "A collective list of public JSON APIs for use in web development."
    },
    {
      "id": 6296790,
      "name": "spring-boot",
      "full_name": "spring-projects/spring-boot",
      "description": "Spring Boot"
    },
    {
      "id": 1148753,
      "name": "spring-framework",
      "full_name": "spring-projects/spring-framework",
      "description": "Spring Framework"
    },
    {
      "id": 1424470,
      "name": "moment",
      "full_name": "moment/moment",
      "description":
        "Parse, validate, manipulate, and display dates in javascript."
    }
  ],
  "issues": [
    {
      "id": 31288736,
      "created_at": "2013-12-28T02:45:29Z",
      "body":
        "Nice feature, I like the idea.\nThanks for the code and improvements.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 31289255,
      "created_at": "2013-12-28T03:26:08Z",
      "body":
        "Thank you for the fix! \nI've totally missed that when writing the README.\n\nHowever, I understand your point for the JS examples but I've kept the syntax the way it was to be coherent with the rest of the code.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 31311350,
      "created_at": "2013-12-29T04:45:46Z",
      "body": "Done :)\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 31338935,
      "created_at": "2013-12-30T09:42:44Z",
      "body": "Thanks!\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 36824053,
      "created_at": "2014-03-06T04:24:52Z",
      "body":
        "Hi,\nThanks for the pull request, I like the idea.\n\nIf you have the time, could you modify it to use a route like:\n/:resource?from=&to=\n\nThis way it could be used in conjunction with filters:\n/:resource?attr=&from=&to=\n\nIdeally, it should goes in `list` function.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 36897792,
      "created_at": "2014-03-06T15:18:48Z",
      "body":
        "Cool, thanks for considering. Changing will be easy, will do and update the\npull request\n\nRelated question: seems there is duplicate code between read and read-write\nroutes, do you plan to consolidate these two files?\n\nGleb\n\nOn Wed, Mar 5, 2014 at 11:24 PM, typicode notifications@github.com wrote:\n\n> Hi,\n> Thanks for the pull request, I like the idea.\n> \n> If you have the time, could you modify it to use a route like:\n> /:resource?from=&to=\n> \n> This way it could be used in conjunction with filters:\n> /:resource?attr=&from=&to=\n> \n> Ideally, it should goes in list function.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/typicode/json-server/pull/7#issuecomment-36824053\n> .\n",
      "user": {
        "id": 2212006,
        "login": "bahmutov",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2212006?v=4"
      }
    },
    {
      "id": 36908747,
      "created_at": "2014-03-06T16:51:56Z",
      "body":
        "You're welcome, thanks for updating code.\n\nYes, I agree with you about read-only/read-write routes. However I've not decided yet what to do: externalize read-only routes and make it possible to load external routes in JSON Server, or mutualize code.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 39289166,
      "created_at": "2014-04-02T05:03:46Z",
      "body":
        "Slicing is now available in v0.3.0 :)\nI didn't merge because code changed a lot.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 40374126,
      "created_at": "2014-04-14T14:49:29Z",
      "body": "Thanks for letting me know. It should work now.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 40855837,
      "created_at": "2014-04-19T00:37:27Z",
      "body":
        "Hi, JSON-Server was refactored and API has changed with 0.3.0.\nMainly it's a lot smaller, uses `lowdb` and server start is more in the spirit of Express.\n\nYou can view the new way of doing things in the README.\n\nRegarding your code, this should work:\n\n``` javascript\nvar server = require('json-server');\nserver.low.db = require('./seed').run();\nserver.listen(4000);\n```\n\nAlso `read-only`, as it was, was removed. Do you need it?\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 42287132,
      "created_at": "2014-05-06T10:36:01Z",
      "body":
        "Sorry for taking so long to answer, didn't have access to a computer.\nAnyway, thank you for letting me know, it's a bug.\n\nJSON-Server uses node-cors module, I've made a pull request to add PATCH to default supported methods.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 42287302,
      "created_at": "2014-05-06T10:38:22Z",
      "body":
        "I hope it worked for you, if you have any other problems feel free to create an issue or comment.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 42371782,
      "created_at": "2014-05-06T23:17:37Z",
      "body":
        "Updated JSON-Server to 0.3.2. It should have PATCH now in allowed methods.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 42982117,
      "created_at": "2014-05-13T16:58:28Z",
      "body": "Thanks!\n",
      "user": {
        "id": 3331076,
        "login": "inwaar",
        "avatar_url": "https://avatars2.githubusercontent.com/u/3331076?v=4"
      }
    },
    {
      "id": 43273384,
      "created_at": "2014-05-15T22:35:12Z",
      "body": "No, sorry. Not with the current version.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 43276220,
      "created_at": "2014-05-15T23:14:37Z",
      "body":
        "Okie dokie.  I noticed an issue that was closed around getting it to respond to `JSONApi` spec.  How do you do this?\n",
      "user": {
        "id": 1277162,
        "login": "brandonparsons",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1277162?v=4"
      }
    },
    {
      "id": 43279941,
      "created_at": "2014-05-16T00:01:03Z",
      "body":
        "Well, it was just an idea for JSON-Server but never was implemented.\n\nHowever, if you need to prototype API based on this spec, you can give a try to https://github.com/daliwali/fortune \n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 43283541,
      "created_at": "2014-05-16T00:50:29Z",
      "body":
        "Thanks for the suggestion!\n\nOn Thu, May 15, 2014 at 6:01 PM, typicode notifications@github.com wrote:\n\n> Well, it was just an idea for JSON-Server but never was implemented.\n> \n> However, if you need to prototype API based on this spec, you can give a\n> try to https://github.com/daliwali/fortune\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/typicode/json-server/issues/12#issuecomment-43279941\n> .\n",
      "user": {
        "id": 1277162,
        "login": "brandonparsons",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1277162?v=4"
      }
    },
    {
      "id": 45832962,
      "created_at": "2014-06-12T06:01:01Z",
      "body":
        "Actually, JSON-Server deletes dependent resources. For example, if you delete a post, it will delete comments that are associated with the post.\n\nTo do so, JSON-Server will look at the database and remove entries that references other entries that don't exist (based on the parentId property).\n\nThis is why all your posts got deleted. They are referencing users that don't exist.\n\nTo fix it, you can either remove the  Ì€userId` property or add an users table like this:\n\n``` javascript\n{\n  \"users\": [\n    { \"id\": 1 },\n    { \"id\": 2 }\n  ],\n  \"posts\": {\n    // ...\n  }\n}\n```\n\nTell me if it solvers your problem?\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 45908753,
      "created_at": "2014-06-12T15:42:15Z",
      "body": "Worked like a charm.\nThanks a lot.\n",
      "user": {
        "id": 7644745,
        "login": "injulkarnilesh",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7644745?v=4"
      }
    },
    {
      "id": 47105094,
      "created_at": "2014-06-25T14:07:20Z",
      "body":
        "Please update the Readme file with the new way of coding this... thx\n\nI wasted hours trying to figure this out.\n",
      "user": {
        "id": 6403202,
        "login": "paulboutin",
        "avatar_url": "https://avatars0.githubusercontent.com/u/6403202?v=4"
      }
    },
    {
      "id": 47174467,
      "created_at": "2014-06-26T00:09:28Z",
      "body":
        "Sorry about that, I totally forgot to remove this part of the README. It's done now.\nI'm updating README on npmjs too.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 49419461,
      "created_at": "2014-07-18T11:06:09Z",
      "body":
        "Hi Kokujin,\n\nDo you have a README for RestClient? I don't know this tool.\n\nRegarding the 500 error, I can give some explanations but not sure if that's what you're asking for.\n\nAnyway, this is because JSONPlaceholder is mostly read-only. It just fakes resources creation and updates.\n\nHere's how it works:\n\nThere are 100 posts in JSONPlaceholder.\n\nYou can POST to http://jsonplaceholder.typicode.com/posts, it will tell you it was created but in fact if you make a GET request to the same URL you'll still have 100 posts.\n\nSo when you try to update post 102, it doesn't exist (though I agree there could be a better status code than 500, I'll fix that when I have the time).\n\nIf the problem is that there's no post created, I'd suggest that you run JSON Server instead, it's read and write.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 49421482,
      "created_at": "2014-07-18T11:36:20Z",
      "body":
        "Thanks @typicode . I'll probably run my own server although I think the site and fake services great, its so bothersome when one wants to test a client quickly :)\n\nhttps://github.com/jpillora/jquery.rest\n",
      "user": {
        "id": 2885603,
        "login": "kokujin",
        "avatar_url": "https://avatars0.githubusercontent.com/u/2885603?v=4"
      }
    },
    {
      "id": 49426365,
      "created_at": "2014-07-18T12:45:01Z",
      "body":
        "Cool, I appreciate your feedback.\nAnd I'll try to improve the returned status code :)\n\nThanks for the link.\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 50955960,
      "created_at": "2014-08-02T06:57:46Z",
      "body": "Thanks!\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 51508225,
      "created_at": "2014-08-07T17:59:54Z",
      "body":
        "Hi Raul,\n\nI've been very busy lately with [katon](https://github.com/typicode/katon) and couldn't get back to you before.\n\nThanks for the pull request. Your idea makes perfectly sense. I took the liberty to make some enhancement to your idea and code. I hope you don't mind.\n\nSince `node-cors` can be configured to return an `Access-Control-Allow-Origin` header that matches the `Origin`, it was actually just a matter of setting two options:\nhttps://github.com/typicode/json-server/commit/c0d43ef437f45288264d5d6ac92d7acdd4a65152\n\nAnd I've reused your code for `method-override`.\n\nAs a side note, it's easier to accept smaller PR, you can do so by creating multiple branch.\nAlso, your IDE made it a little harder to read by adding `;` which doesn't match the project coding style.\n\nI hope that will help you in your future PRs :)\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 51509241,
      "created_at": "2014-08-07T18:06:56Z",
      "body":
        "Hey typicode,\n\nGreat to hear my idea got incorporated. Will definitely make smaller PRs in the future. This was actually my first. Also, sorry about the \";\" at the end of the lines :]\n",
      "user": {
        "id": 1403840,
        "login": "raulcesar",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1403840?v=4"
      }
    },
    {
      "id": 51519389,
      "created_at": "2014-08-07T19:24:44Z",
      "body": "Thanks, I've added your code to 0.3.11\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    },
    {
      "id": 51667678,
      "created_at": "2014-08-08T23:10:33Z",
      "body": "Thank you :)\n",
      "user": {
        "id": 5502029,
        "login": "typicode",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5502029?v=4"
      }
    }
  ]
}
